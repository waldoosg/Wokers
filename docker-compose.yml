services:
  redis-broker:
    image: redis:7
    volumes:
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    networks:
      e0-kevinstifel_my_network:
        ipv4_address: 192.168.100.6
    deploy:
      resources:
        limits:
          memory: 512M

  producer:
    build:
      context: ./project
      dockerfile: Dockerfile
    command: uvicorn producer:app --reload --host 0.0.0.0 --port 8000
    volumes:
      - ./project:/opt/
    expose:
      - 8000
    ports:
      - '8000:8000'
    environment:
      CELERY_BROKER_URL: ${CELERY_BROKER_URL}
      CELERY_RESULT_BACKEND: ${CELERY_RESULT_BACKEND}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
    depends_on:
      - redis-broker
    networks:
      e0-kevinstifel_my_network:
        ipv4_address: 192.168.100.7
    deploy:
      resources:
        limits:
          memory: 512M

  consumer:
    build:
      context: ./project
      dockerfile: Dockerfile
    deploy:
      resources:
        limits:
          memory: 512M
    command: celery -A consumer.celery_app worker --loglevel=INFO --purge --concurrency=1
    volumes:
      - ./project:/opt/
    depends_on:
      - producer
    environment:
      CELERY_BROKER_URL: ${CELERY_BROKER_URL}
      CELERY_RESULT_BACKEND: ${CELERY_RESULT_BACKEND}

      DB_USER: ${DB_USER}
      DB_HOST: ${DB_HOST}
      DB_NAME: ${DB_NAME}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_PORT: ${DB_PORT}
    networks:
      e0-kevinstifel_my_network:
        ipv4_address: 192.168.100.8

volumes:
  postgres_data:

networks:
  e0-kevinstifel_my_network:
    external: true
