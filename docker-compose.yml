services:
  redis-broker:
    image: redis:7
    volumes:
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    networks:
      - existing-network

  producer:
    build:
      context: ./project
      dockerfile: Dockerfile
    command: uvicorn producer:app --reload --host 0.0.0.0 --port 8000
    volumes:
      - ./project:/opt/
    expose:
      - 8000
    ports:
      - '8000:8000'
    environment:
      CELERY_BROKER_URL: ${CELERY_BROKER_URL}
      CELERY_RESULT_BACKEND: ${CELERY_RESULT_BACKEND}
    depends_on:
      - redis-broker
    networks:
      - existing-network

  consumer:
    build:
      context: ./project
      dockerfile: Dockerfile
    deploy:
      replicas: 2
    command: celery -A consumer.celery_app worker --loglevel=INFO --purge --concurrency=1
    volumes:
      - ./project:/opt/
    depends_on:
      - producer
    environment:
      CELERY_BROKER_URL: ${CELERY_BROKER_URL}
      CELERY_RESULT_BACKEND: ${CELERY_RESULT_BACKEND}
    networks:
      - existing-network

  dashboard:
    build:
      context: ./project
      dockerfile: Dockerfile
    command: bash -c "sleep 10; celery -A consumer.celery_app flower --loglevel=INFO --url_prefix=dashboard;"
    expose:
      - 5555
    ports:
      - '5556:5555'
    volumes:
      - ./project:/opt/
    depends_on:
      - consumer
    environment:
      CELERY_BROKER_URL: ${CELERY_BROKER_URL}
      CELERY_RESULT_BACKEND: ${CELERY_RESULT_BACKEND}
    networks:
      - existing-network

volumes:
  postgres_data:

networks:
  existing-network:
    external: true
    name: e0-kevinstifel_my_network
